version: 3.5
runners:
  high:
    config-id: 3
pipeline-when:
  equal:
    - << event.ref >>
    - refs/heads/main
images:
  maven:
    image: maven:latest
    auth:
      username: thangaram611
      password: << env.DOCKER_PASS >>
  ubuntu:
    image: ubuntu:latest
    auth:
      username: thangaram611
      password: << env.DOCKER_PASS >>
  docker:
    image: docker:latest
    auth:
      username: thangaram611
      password: << env.DOCKER_PASS >>
jobs:
  maven-check:
    steps:
      - echo "<< event.ref >>"
      - java -version
      - javac -version
      - mvn -version
  unit-test:
    steps:
      - printenv
      - mvn surefire-report:report
    artifacts:
      upload:
        - type: zip
          regex:
            - /catalyst/target/site/**
          name: junit.zip
          location: stratus://pipe-development/
  package:
    steps:
      - mvn clean package -DskipTests=true
    artifacts:
      upload:
        - type: file
          name: SNAPSHOT.jar
          file: /catalyst/target/demo-0.0.1-SNAPSHOT.jar
          location: stratus://pipe-development/
  docker-build:
    runner: high
    image: docker
    steps:
      - apk update && apk upgrade
      - apk add curl
      - >-
        (curl -sSL
        "https://github.com/buildpacks/pack/releases/download/v0.33.2/pack-v0.33.2-linux.tgz"
        | tar -C /usr/local/bin/ --no-same-owner -xzv pack)
      - >-
        pack build sample-spring-boot --builder
        paketobuildpacks/builder-jammy-tiny --env BP_JVM_VERSION=21
      - docker save -o spring-img.tar sample-spring-boot
      - du -sh spring-img.tar
    artifacts:
      upload:
        - type: file
          name: spring-img.tar
          file: /catalyst/spring-img.tar
          location: stratus://pipe-development/
  docker-deploy:
    when:
      equal:
        - << status.build.docker-build >>
        - success
    image: docker
    steps:
      - docker load -i spring-img.tar
      - docker images
      - docker tag sample-spring-boot thangaram611/private:spring-boot
      - docker images
      - docker push thangaram611/private:spring-boot
    artifacts:
      download:
        - type: file
          name: spring-img.tar
          file: /catalyst/spring-img.tar
          location: stratus://pipe-development/
  catalyst-deploy:
    when:
      equal:
        - << status.build.package >>
        - success
    steps:
      - printenv
      - >-
        catalyst deploy appsail --name spring-boot --build-path ./SNAPSHOT.jar
        --stack java17 --platform javase --command "java -jar SNAPSHOT.jar"
        --verbose
    artifacts:
      download:
        - type: file
          name: SNAPSHOT.jar
          file: /catalyst/SNAPSHOT.jar
          location: stratus://pipe-development/
stages:
  - name: build
    image: maven
    jobs:
      - maven-check
      - unit-test
      - - package
        - docker-build
  - name: deploy
    when:
      not: false
    jobs:
      - - docker-deploy
        - catalyst-deploy